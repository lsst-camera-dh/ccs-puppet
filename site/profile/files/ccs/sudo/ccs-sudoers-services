#!/bin/bash
## This file is managed by Puppet; changes may be overwritten.
##
## Create a sudoers file listing the services that the ccs user is
## allowed to restart (etc).
##
## In RHEL8, we should be able to use polkit to manage this without sudo.
## See eg https://bugzilla.redhat.com/show_bug.cgi?id=1694726


outfile=/etc/sudoers.d/user-ccs-systemctl


PN=${0##*/}

umask 077

tempfile=/tmp/$PN.$$
trap "rm -f $tempfile 2> /dev/null" EXIT

## Any user can get basic information from "status", but adding
## it here allows more detailed output (from the journal).
## Perhaps we should add "status -l".
actions="start stop restart status"

function find_services ()
{
    local sdir=/etc/systemd/system
    local s service

    while read s; do

        [ -e "$s" ] || break

        service=${s##*/}
        service=${service%.*}   #  eg vis-server

        echo $service

    done < <( find $sdir -maxdepth 1 -name '*.service' -exec grep -l 'User=ccs' {} + | sort)

    return 0
}


## Convert a service name to a suitable sudo alias name.
function aliasname ()
{
    echo "$@" | tr '[a-z]' '[A-Z]' | tr '-' '_'
}


set -- $(find_services)

exec 3>&1
exec > $tempfile

## Do not add a date stamp, it would defeat cmp below.
## We could used diff -I, but not worth it.
cat <<EOF
# Automatically generated by $0
# DO NOT MODIFY BY HAND.

EOF

for s; do

    u=$(aliasname $s)

    printf "Cmnd_Alias %s =" "$u"

    comma=

    for a in $actions; do
        printf "%s \\\\\n/usr/bin/systemctl %s %s" "$comma" "$a" "$s"
        comma=","
    done

    printf "\n\n"

done


for s; do

    u=$(aliasname $s)

    printf "ccs ALL= NOPASSWD: $u\n"

done

exec 1>&3 3>&-


cmp -s $tempfile $outfile && exit 0


[ -e $outfile ] && {

    suffix=$(date +%F-%R)

    backup=${outfile%/*}/.${outfile##*/}.$suffix

    ## TODO prune backups.
    cp -a $outfile $backup
}


if [ $# -eq 0 ]; then
    rm -f $outfile
else
    cp $tempfile $outfile
fi


exit 0
